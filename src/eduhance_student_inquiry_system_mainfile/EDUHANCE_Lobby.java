/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package eduhance_student_inquiry_system_mainfile;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.JOptionPane;
import java.sql.PreparedStatement;
import javax.swing.*;
import java.awt.*;
import java.sql.SQLException;


/**
 *
 * @author JED
 */
public class EDUHANCE_Lobby extends javax.swing.JFrame {
    private Timer refreshTimer;
    private boolean isPaused = false;
    private String lobbyCode;
    private JPanel questionsContainer;
    private JScrollPane scrollPane;
        
    /**
     * Creates new form EDUHANCE_Lobby
     */
    public EDUHANCE_Lobby() {
        initComponents();
        setupQuestionsContainer();
        startRefreshTimer();
        
        
        questionsContainer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                isPaused = true;
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                isPaused = false;
            }
        });
        
    }
    
    private void setupQuestionsContainer() {
        questionsContainer = new JPanel();
        questionsContainer.setLayout(new BoxLayout(questionsContainer, BoxLayout.Y_AXIS));
        questionsContainer.setBackground(new Color(33, 78, 114));
        
        JPanel bottomPadding = new JPanel();
        bottomPadding.setBackground(new Color(33, 78, 114));
        bottomPadding.setPreferredSize(new Dimension(1, 20));
        questionsContainer.add(bottomPadding);
    
        scrollPane = new JScrollPane(questionsContainer);
        scrollPane.setBorder(null);
        scrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
        scrollPane.getVerticalScrollBar().setUnitIncrement(16);
        scrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
        getContentPane().add(scrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 540, 530));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sectionboxField = new javax.swing.JTextField();
        sectionboxLabel = new javax.swing.JLabel();
        instructorboxLabel1 = new javax.swing.JLabel();
        subjectboxLabel = new javax.swing.JLabel();
        instructornameboxField = new javax.swing.JTextField();
        subjectboxField = new javax.swing.JTextField();
        dateboxField1 = new javax.swing.JTextField();
        dateboxLabel1 = new javax.swing.JLabel();
        submitButton = new javax.swing.JButton();
        titleLabel2 = new javax.swing.JLabel();
        titleLabel3 = new javax.swing.JLabel();
        sectionboxLabel1 = new javax.swing.JLabel();
        instructorboxLabel2 = new javax.swing.JLabel();
        subjectboxLabel1 = new javax.swing.JLabel();
        dateboxLabel2 = new javax.swing.JLabel();
        sectionboxField1 = new javax.swing.JTextField();
        instructornameboxField1 = new javax.swing.JTextField();
        subjectboxField1 = new javax.swing.JTextField();
        dateboxField2 = new javax.swing.JTextField();
        askquestionButton = new javax.swing.JButton();
        leaveButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        outIcon = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();

        sectionboxField.setBorder(null);
        sectionboxField.setEnabled(false);
        sectionboxField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sectionboxFieldActionPerformed(evt);
            }
        });

        sectionboxLabel.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        sectionboxLabel.setForeground(new java.awt.Color(102, 102, 102));
        sectionboxLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        sectionboxLabel.setText("Section:");

        instructorboxLabel1.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        instructorboxLabel1.setForeground(new java.awt.Color(102, 102, 102));
        instructorboxLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        instructorboxLabel1.setText("Instructor Name:");

        subjectboxLabel.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        subjectboxLabel.setForeground(new java.awt.Color(102, 102, 102));
        subjectboxLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        subjectboxLabel.setText("Subject:");

        instructornameboxField.setBorder(null);
        instructornameboxField.setEnabled(false);

        subjectboxField.setBorder(null);
        subjectboxField.setEnabled(false);
        subjectboxField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subjectboxFieldActionPerformed(evt);
            }
        });

        dateboxField1.setBorder(null);
        dateboxField1.setEnabled(false);
        dateboxField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateboxField1ActionPerformed(evt);
            }
        });

        dateboxLabel1.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        dateboxLabel1.setForeground(new java.awt.Color(102, 102, 102));
        dateboxLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        dateboxLabel1.setText("Date:");

        submitButton.setBackground(new java.awt.Color(102, 255, 255));
        submitButton.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        submitButton.setForeground(new java.awt.Color(102, 102, 102));
        submitButton.setText("Submit");
        submitButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        titleLabel2.setBackground(new java.awt.Color(255, 255, 255));
        titleLabel2.setFont(new java.awt.Font("Verdana", 1, 36)); // NOI18N
        titleLabel2.setForeground(new java.awt.Color(255, 255, 255));
        titleLabel2.setText("EDUHANCE");
        getContentPane().add(titleLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 20, -1, -1));

        titleLabel3.setFont(new java.awt.Font("Verdana", 1, 16)); // NOI18N
        titleLabel3.setForeground(new java.awt.Color(255, 255, 255));
        titleLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel3.setText("Student Inquiry System");
        getContentPane().add(titleLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 60, 270, 20));

        sectionboxLabel1.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        sectionboxLabel1.setForeground(new java.awt.Color(255, 255, 255));
        sectionboxLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        sectionboxLabel1.setText("Section:");
        getContentPane().add(sectionboxLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 160, 130, 20));

        instructorboxLabel2.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        instructorboxLabel2.setForeground(new java.awt.Color(255, 255, 255));
        instructorboxLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        instructorboxLabel2.setText("Instructor Name:");
        getContentPane().add(instructorboxLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 120, 140, 20));

        subjectboxLabel1.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        subjectboxLabel1.setForeground(new java.awt.Color(255, 255, 255));
        subjectboxLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        subjectboxLabel1.setText("Subject:");
        getContentPane().add(subjectboxLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 140, 130, 20));

        dateboxLabel2.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        dateboxLabel2.setForeground(new java.awt.Color(255, 255, 255));
        dateboxLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        dateboxLabel2.setText("Date:");
        getContentPane().add(dateboxLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 180, 130, 20));

        sectionboxField1.setEditable(false);
        sectionboxField1.setBackground(new java.awt.Color(5, 35, 79));
        sectionboxField1.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        sectionboxField1.setForeground(new java.awt.Color(255, 255, 255));
        sectionboxField1.setBorder(null);
        sectionboxField1.setFocusable(false);
        sectionboxField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sectionboxField1ActionPerformed(evt);
            }
        });
        getContentPane().add(sectionboxField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 160, 190, 20));

        instructornameboxField1.setEditable(false);
        instructornameboxField1.setBackground(new java.awt.Color(5, 35, 79));
        instructornameboxField1.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        instructornameboxField1.setForeground(new java.awt.Color(255, 255, 255));
        instructornameboxField1.setBorder(null);
        instructornameboxField1.setDisabledTextColor(new java.awt.Color(51, 51, 51));
        instructornameboxField1.setFocusable(false);
        getContentPane().add(instructornameboxField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 120, 190, 20));

        subjectboxField1.setEditable(false);
        subjectboxField1.setBackground(new java.awt.Color(5, 35, 79));
        subjectboxField1.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        subjectboxField1.setForeground(new java.awt.Color(255, 255, 255));
        subjectboxField1.setBorder(null);
        subjectboxField1.setFocusable(false);
        subjectboxField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subjectboxField1ActionPerformed(evt);
            }
        });
        getContentPane().add(subjectboxField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 140, 190, 20));

        dateboxField2.setEditable(false);
        dateboxField2.setBackground(new java.awt.Color(5, 35, 79));
        dateboxField2.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        dateboxField2.setForeground(new java.awt.Color(255, 255, 255));
        dateboxField2.setBorder(null);
        dateboxField2.setFocusable(false);
        dateboxField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateboxField2ActionPerformed(evt);
            }
        });
        getContentPane().add(dateboxField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 180, 190, 20));

        askquestionButton.setBackground(new java.awt.Color(139, 125, 20));
        askquestionButton.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        askquestionButton.setForeground(new java.awt.Color(255, 215, 0));
        askquestionButton.setText("Ask a Question");
        askquestionButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 215, 0), 3));
        askquestionButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        askquestionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                askquestionButtonActionPerformed(evt);
            }
        });
        getContentPane().add(askquestionButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 240, 130, 50));

        leaveButton.setBackground(new java.awt.Color(255, 0, 0));
        leaveButton.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        leaveButton.setForeground(new java.awt.Color(255, 255, 255));
        leaveButton.setText("Leave");
        leaveButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        leaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leaveButtonActionPerformed(evt);
            }
        });
        getContentPane().add(leaveButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 240, 100, 50));

        jPanel1.setBackground(new java.awt.Color(33, 78, 114));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(33, 78, 114), 3, true));

        outIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/home_24px.png"))); // NOI18N
        outIcon.setToolTipText("Back to Home");
        outIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        outIcon.setPreferredSize(new java.awt.Dimension(32, 32));
        outIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                outlobby(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 842, Short.MAX_VALUE)
                .addComponent(outIcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(outIcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 52, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 880, 90));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 650));

        jPanel2.setBackground(new java.awt.Color(5, 35, 79));
        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 650));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void sectionboxFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sectionboxFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sectionboxFieldActionPerformed

    private void subjectboxFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subjectboxFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_subjectboxFieldActionPerformed

    private void dateboxField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateboxField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateboxField1ActionPerformed

    private void sectionboxField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sectionboxField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sectionboxField1ActionPerformed

    private void subjectboxField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subjectboxField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_subjectboxField1ActionPerformed

    private void dateboxField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateboxField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateboxField2ActionPerformed

    private void askquestionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_askquestionButtonActionPerformed
        EDUHANCE_Student_Question_Form_Window questionformWin = new EDUHANCE_Student_Question_Form_Window();
        questionformWin.setLobbyCode(lobbyCode);
        questionformWin.setVisible(true);

    }//GEN-LAST:event_askquestionButtonActionPerformed

    private void leaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leaveButtonActionPerformed
        int result = JOptionPane.showConfirmDialog(null, "Are you sure you want to leave?",
            "Leave", JOptionPane.OK_CANCEL_OPTION);

        if (result == JOptionPane.OK_OPTION) {
            try {
                String currentUserId = UserSession.getInstance().getUserId().split(",")[0].split(":")[1];
                int studentId = Integer.parseInt(currentUserId);

                Connection conn = DatabaseConnection.getConnection();
                String sql = "UPDATE lobby_students SET active = 0 WHERE studentId = ? AND active = 1";
                PreparedStatement pstmt = conn.prepareStatement(sql);
                pstmt.setInt(1, studentId);
                pstmt.executeUpdate();

                EDUHANCE_StudentLandingPage.instance.setVisible(true);
                dispose();

            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Database Error: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_leaveButtonActionPerformed

    private void outlobby(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_outlobby
        int result = JOptionPane.showConfirmDialog(null, "Go back to homepage?",
            "Leave", JOptionPane.OK_CANCEL_OPTION);

        if (result == JOptionPane.OK_OPTION) {
            EDUHANCE_StudentLandingPage.instance.setLobbyCode(lobbyCode);
            System.out.print(lobbyCode);
            EDUHANCE_StudentLandingPage.instance.setVisible(true);
            
            
        }
    }//GEN-LAST:event_outlobby
    public void setLobbyCode(String code) {
        this.lobbyCode = code;
    }
    
    private void startRefreshTimer() {
        refreshTimer = new Timer();
        refreshTimer.scheduleAtFixedRate(new TimerTask() {
            @Override
            public void run() {
                refreshInquiries();
            }
        }, 0, 1000); // Update every 1000ms (1 second)
    }
    
    
    private void refreshInquiries() {
        if (isPaused || lobbyCode == null) {
            return;
        }

        try {
            JScrollBar verticalBar = scrollPane.getVerticalScrollBar();
            int currentScroll = verticalBar.getValue();
            
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/eduhance_db", "root", "");

            String lobbyCodeQuery = "SELECT lobbyId FROM lobby WHERE lobbyCode = ? AND lobbyStatus = 1";
            PreparedStatement lobbycodeStmt = conn.prepareStatement(lobbyCodeQuery);
            lobbycodeStmt.setString(1, lobbyCode);
            ResultSet lobbyRs = lobbycodeStmt.executeQuery();

            int lobbyId = 0;
            if (!lobbyRs.next()) {
                JOptionPane.showMessageDialog(this, "The lobby has ended", "Lobby Status", JOptionPane.INFORMATION_MESSAGE);
                EDUHANCE_StudentLandingPage.instance.setVisible(true);
                dispose();
                return;
            } else {
                lobbyId = lobbyRs.getInt("lobbyId");
            }

            String sql = "SELECT * FROM inquiry WHERE lobbyId = ? ORDER BY id DESC";
            PreparedStatement stmt = conn.prepareStatement(sql);
            stmt.setInt(1, lobbyId);
            ResultSet rs = stmt.executeQuery();

            // Create a list to store the questions
            java.util.List<QuestionData> questions = new java.util.ArrayList<>();
            while (rs.next()) {
                questions.add(new QuestionData(
                    rs.getInt("id"),
                    rs.getString("inquiry")
                ));
            }

            // Close resources
            rs.close();
            stmt.close();
            lobbyRs.close();
            lobbycodeStmt.close();
            conn.close();

            // Update UI with collected data
            SwingUtilities.invokeLater(() -> {
                questionsContainer.removeAll();
                for (QuestionData question : questions) {
                    JPanel questionPanel = createQuestionPanel(question);
                    questionsContainer.add(questionPanel);
                }
                questionsContainer.revalidate();
                questionsContainer.repaint();
                
                verticalBar.setValue(currentScroll);
            });

        } catch (Exception e) {
            System.out.println("Error refreshing inquiries: " + e.getMessage());
//            JOptionPane.showMessageDialog(this, "The lobby has ended", "Lobby Status", JOptionPane.INFORMATION_MESSAGE);
//            EDUHANCE_StudentLandingPage.instance.setVisible(true);
//            dispose();
        }
    }
    
    private static class QuestionData {
        final int id;
        final String inquiry;

        QuestionData(int id, String inquiry) {
            this.id = id;
            this.inquiry = inquiry;
        }
    }

    private JPanel createQuestionPanel(QuestionData data) {
        JPanel questionPanel = new JPanel();
        questionPanel.setLayout(new BorderLayout(10, 5));
        questionPanel.setBackground(new Color(25,25,25));
        
        questionPanel.setPreferredSize(new Dimension(520, 220));
//        questionPanel.setMinimumSize(new Dimension(520, 300));
//        questionPanel.setMaximumSize(new Dimension(520, 700));
    
        JTextArea questionText = new JTextArea(data.inquiry);
        questionText.setWrapStyleWord(true);
        questionText.setLineWrap(true);
        questionText.setEditable(false);
        questionText.setFocusable(false);
        questionText.setBackground(new Color(45, 90, 126));
        questionText.setForeground(Color.WHITE);
        questionText.setFont(new Font("Arial", Font.BOLD, 14));
        
        questionText.setBorder(BorderFactory.createCompoundBorder(
            BorderFactory.createEmptyBorder(5, 5, 5, 5),
            BorderFactory.createLineBorder(new Color(45, 90, 126), 3)
        ));
        
        JLabel studentIdLabel = new JLabel("Student ID: " + data.id);
        studentIdLabel.setForeground(Color.WHITE);

        questionPanel.add(studentIdLabel, BorderLayout.NORTH);
        questionPanel.add(questionText, BorderLayout.CENTER);
        

        questionPanel.setBorder(BorderFactory.createCompoundBorder(
            BorderFactory.createEmptyBorder(5, 5, 5, 5),
            BorderFactory.createLineBorder(new Color(33, 78, 114), 1)
        ));

        return questionPanel;
    }
    
    public void dispose() {
        if (refreshTimer != null) {
            refreshTimer.cancel();
        }
        super.dispose();
    }
    
    public void setLobbyDetails(String instructorName, String subject, String section, String date) {
        instructornameboxField1.setText(instructorName);
        subjectboxField1.setText(subject);
        sectionboxField1.setText(section);
        dateboxField2.setText(date);
    }

    
    public javax.swing.JTextField getInstructornameboxField1() {
        return instructornameboxField1;
    }

    public javax.swing.JTextField getSubjectboxField1() {
        return subjectboxField1;
    }

    public javax.swing.JTextField getSectionboxField1() {
        return sectionboxField1;
    }

    public javax.swing.JTextField getDateboxField2() {
        return dateboxField2;
    }
    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EDUHANCE_Lobby.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EDUHANCE_Lobby.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EDUHANCE_Lobby.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EDUHANCE_Lobby.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EDUHANCE_Lobby().setVisible(true);
            }
        });
        
//        try {
//            String msgin = "";
//            ss = new ServerSocket(1201);
//            s = ss.accept();
//            dis = new DataInputStream(s.getInputStream());
//            dout = new DataOutputStream(s.getOutputStream());
//            
//            while(!msgin.equals("exit")){
//                msgin = dis.readUTF();
//                msgArea.setText(msgArea.getText() + "\n Student 1: " + msgin);
//                
//            }
//        }
//        catch(Exception e){
//            //HANDLE EXCEPTION HERE
//        }
             
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton askquestionButton;
    private javax.swing.JTextField dateboxField1;
    private javax.swing.JTextField dateboxField2;
    private javax.swing.JLabel dateboxLabel1;
    private javax.swing.JLabel dateboxLabel2;
    private javax.swing.JLabel instructorboxLabel1;
    private javax.swing.JLabel instructorboxLabel2;
    private javax.swing.JTextField instructornameboxField;
    private javax.swing.JTextField instructornameboxField1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton leaveButton;
    private javax.swing.JLabel outIcon;
    private javax.swing.JTextField sectionboxField;
    private javax.swing.JTextField sectionboxField1;
    private javax.swing.JLabel sectionboxLabel;
    private javax.swing.JLabel sectionboxLabel1;
    private javax.swing.JTextField subjectboxField;
    private javax.swing.JTextField subjectboxField1;
    private javax.swing.JLabel subjectboxLabel;
    private javax.swing.JLabel subjectboxLabel1;
    private javax.swing.JButton submitButton;
    private javax.swing.JLabel titleLabel2;
    private javax.swing.JLabel titleLabel3;
    // End of variables declaration//GEN-END:variables
}
